version: '3.8'

networks:
  cuentas-network:
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    container_name: cuentas-postgres
    restart: unless-stopped
    networks:
      - cuentas-network
    environment:
      POSTGRES_DB: cuentas
      POSTGRES_USER: cuentas_user
      POSTGRES_PASSWORD: cuentas_password
      TZ: "America/El_Salvador"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cuentas_user -d cuentas"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: cuentas-redis-cache
    restart: unless-stopped
    networks:
      - cuentas-network
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  vault:
    image: hashicorp/vault:1.15
    container_name: cuentas-vault
    restart: unless-stopped
    networks:
      - cuentas-network
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: vault-root-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_DISABLE_MLOCK: "true"
    volumes:
      - vault_data:/vault/data
      - vault_logs:/vault/logs
    cap_add:
      - IPC_LOCK
    command: vault server -dev -dev-listen-address=0.0.0.0:8200
    healthcheck:
      test: ["CMD-SHELL", "vault status -address=http://127.0.0.1:8200"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  vault-init:
    image: hashicorp/vault:1.15
    container_name: vault-init
    networks:
      - cuentas-network
    depends_on:
      vault:
        condition: service_healthy
    volumes:
      - vault_data:/vault/data
      - ./scripts/init-vault.sh:/init-vault.sh
    environment:
      VAULT_ADDR: "http://vault:8200"
      VAULT_TOKEN: "vault-root-token"
    command: ["sh", "/init-vault.sh"]
    restart: "no"

  cuentas:
    build: .
    container_name: cuentas-app
    restart: unless-stopped
    networks:
      - cuentas-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      vault-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    environment:
      CUENTAS_DATABASE_URL: "postgres://cuentas_user:cuentas_password@postgres:5432/cuentas?sslmode=disable"
      CUENTAS_HACIENDA_URL: "https://apitest.dtes.mh.gob.sv"
      CUENTAS_PORT: "8080"
      CUENTAS_REDIS_URL: "redis://:redis_password@redis:6379"
      CUENTAS_VAULT_URL: "http://vault:8200"
      CUENTAS_FIRMADOR_URL: "http://167.172.230.154:8113"
      TZ: "America/El_Salvador"
      CUENTAS_HACIENDA_CONSULTA_URL: "https://apitest.dtes.mh.gob.sv/fesv/recepcion/consultadte/"
      CUENTAS_HACIENDA_TIMEOUT: "60s"
      CUENTAS_HACIENDA_RETRY_MAX: "3"
      CUENTAS_HACIENDA_RETRY_WAIT_MIN: "2s"
      CUENTAS_HACIENDA_RETRY_WAIT_MAX: "10s"
    volumes:
      - ./config.yaml:/app/config.yaml
      - vault_data:/vault/data
      - ./scripts/start-app.sh:/start-app.sh
    command: ["sh", "/start-app.sh"]

volumes:
  postgres_data:
  redis_data:
  vault_data:
  vault_logs:
